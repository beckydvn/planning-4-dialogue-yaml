---
version: "3.1"
name: order-pizza

# to extract from the user. defines what each variable can hold
# also defines examples for rasa to use
# types available:
#   flag
#       can set to T/F initially
#   fflag (fuzzy flag -- yes, no, maybe)
#       can set to T/F/M (maybe) initially
#   enum
#   json
context-variables:
  order:
    type: enum
    known:
      type: fflag
      initially: false
    options:
      cheese:
        variations:
        - chz
        - cheez
        - mozzarella
        - fromage
        - cheesy
      pepperoni:
        variations:
        - peperoni
        - meat
        - sausage
      mushroom:
        variations:
        - vegetable
        - veggie
        - musroom
        - shroom
      gluten free:
        variations:
        - healthy
        - gluten-free
        - gf
      hawaiian:
        variations:
        - pineapple
        - ham and pineapple
        - sweet
  order_available:
    type: flag
    initially: false
  location:
    type: json
    known: 
      type: fflag
      initially: false
    extraction: spacy
    method: gpe
    examples:
    - New York
    - Denver
    - Tallahassee
    - Chicago
    - Austin
  online_payment_method:
    type: enum
    known: 
      type: fflag
      initially: false
    options: 
      credit:
        variations:
        - crdit
        - credit card
        - visa
        - mastercard
      debit:
        variations: 
        - dbit
        - debit card
        - chequing account
        - chequing
        - savings account
        - savings
  cash:
    type: enum
    known: 
      type: fflag
      initially: false
    options:
      cash:
        variations:
        - money
        - notes
  card_number:
    type: json
    known:
      type: fflag
      initially: false
    extraction: regex
    pattern: \d{16}
  paying_online:
    type: flag
    initially: false
  goal:
    type: flag
    initially: false

# combine with the context variables above to pass to rasa
# NOTE: deleted the | character which seems to convert the list to a single
# string (rasa uses this, not sure why though -- it parses much nicer without
# it).
nlu:
  - intent: greet
    examples:
      - Hey
      - Hi
      - hey there
  - intent: leave
    examples:
      - Goodbye
      - Bye
      - That's all
      - i'm done
  - intent: confirm
    examples:
      - yes
      - yeah
      - that's it
      - Y
      - mhm
      - confirm
      - yes please
  - intent: deny
    examples:
      - no
      - not at all
      - that's not what i meant
      - absolutely not
      - i don't want that
      - nah
      - no thanks
      - no thank you
  - intent: share_order
    # specify entities so we can ensure all examples use exactly these entities
    # (no more, no less)
    entities: 
      - order 
    examples:
      - I want a $order$ pizza
      - $order$ pizza please!
      - Do you have $order$ pizza?
  - intent: share_location
    entities:
      - location 
    examples:
      - I live in $location$.
      - Do you deliver to $location$?
      - I want my pizza to be delivered to $location$.
  - intent: set_payment_method_online
    entities:
      - online_payment_method
    examples:
      - I want to pay by $online_payment_method$.
      - Can I pay with $online_payment_method$?
      - I will pay in $online_payment_method$
  - intent: set_payment_method_cash
    entities:
      - cash
    examples:
      - I want to pay by $cash$.
      - Can I pay with $cash$?
      - I will pay in $cash$
  - intent: pay
    entities:
      - card_number
    examples:
      - My credit card number is $card_number$.
      - This is my account number $card_number$
      - Ok, the number on my card is $card_number$.

responses:
  site-down-exit:
    Pizza site is experiencing issues and was unable to make your request. Exiting...

# can set up template effects
effects:
  # general validate-response effect created by default
  validate-response:
    # parameters that the template can take
    parameters:
      - entity
      - valid-intent
      - unclear-intent
      - valid-follow-up
    oneof:
      outcomes:
        # received a valid value
        valid:
          updates:
            entity:
              value: $entity$
              known: true
          intent: valid-intent
          follow_up: valid-follow-up
        # need to clarify the response
        unclear:
          updates:
            entity:
              known: maybe
          follow_up:
            clarify: parent-action
          intent: unclear-intent
  # general confirm effect created by default
  confirm-response:
    parameters:
      - entity
    oneof:
      outcomes:
        confirm:
          updates:
            entity:
              value: $entity$
              known: true
          intent: confirm
        deny:
          updates:
            entity:
              value: null
              known: false
          intent: deny

actions:
  ask-location:
    type: dialogue
    subtype: dialogue disambiguation 
    message_variants:
      - Where are you located?
      - Where do you live?
      - Where would you like to deliver?
    condition:
      location:
        known: false
    effects:
      validate-response:
        entity: location
        # invalid-intent and unclear-intent would be decided by the executor based on
        # the extraction results/confidence
        valid-intent: share_location
    # if supplied, creates a corresponding "clarify" action during parsing which 
    # assumes as a condition that the entities have their known attribute set
    # to maybe and the effect is the default confirm above
    clarify:
      entity: location
      message_variants:
        - Are you located in $location$?
        - Do you live in $location$?

  # ask for the user's order
  ask-order:
    type: dialogue
    subtype: dialogue disambiguation 
    message_variants:
      - What would you like to order?
      - What type of pizza would you like?
    condition:
      order:
        known: false
    effects:
      validate-response:
        entity: order
        valid-intent: share_order
        valid-follow-up: check-order-availability
        response: "Checking order availability..."
    clarify:
      entity: order
      message_variants:
        - Would you like to order $order$?

# add dialogue to outcome (response)
# want to be able to add dialogue without explicitly updating variables (like an acknowledgement)
# not handled by the planner

  # ask for the user's payment method
  ask-payment:
    type: dialogue
    subtype: dialogue disambiguation 
    message_variants:
      - How would you like to pay?
    condition:
      order:
        known: true
      location:
        known: true
      online_payment_method:
        known: false
      cash:
        known: false
    effects:
      oneof:
        pay-online:
          oneof:
            outcomes:
              # received a valid value
              valid:
                updates:
                  online_payment_method:
                    value: $online_payment_method$
                    known: true
                  paying_online: true
                intent: set_payment_method_online
              # need to clarify the response
              unclear:
                updates:
                  online_payment_method:
                    known: maybe
                follow_up:
                  clarify: ask-payment
                intent: unclear-intent
        pay-cash:
          oneof:
            outcomes:
              # received a valid value
              valid:
                updates:
                  cash:
                    value: $cash$
                    known: true
                  paying_online: false
                intent: set_payment_method_cash
              # need to clarify the response
              unclear:
                updates:
                  cash:
                    known: maybe
                follow_up:
                  clarify: ask-payment
                intent: unclear-intent
    clarify:
      entity: online_payment_method
      message_variants:
        - Would you like to pay with $online_payment_method$?

  # ask for the user's card
  ask-card-number:
    type: dialogue
    subtype: dialogue disambiguation 
    message_variants:
      - Enter your card number.
      - Please enter your card details.
    condition:
      payment_method:
        known: true
        options:
          - credit
          - debit
    effects:
      validate-response:
        entity: card_number
        valid-intent: pay

  check-order-availability:
    type: api
    call: pizza.actions.check_order_availability
    effects:
      make-call:
        oneof:
          outcomes:
            in-stock:
              updates:
                order_available: true
              # status of the call (helps determine the outcome similar to intent)
              status: success 
            out-of-stock:
              updates:
                order:
                  known: false
              follow_up: ask-order
              status: success
            site-down:
              response: site-down-exit
              status: 404

  place-order:
    type: api
    call: pizza.actions.place_order # make the call
    condition:
      or:
        card_number:
          known: True
        payment_method:
          options: cash
    effects:
      make-call:
        oneof:
          outcomes:
            success:
              updates:
                goal: true
              status: success
              response: "Order was successfully placed!"
            site-down:
              response: site-down-exit
              status: 404

...