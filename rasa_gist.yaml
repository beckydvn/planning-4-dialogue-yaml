---
version: "3.1"
name: order-pizza

# to extract from the user. defines what each variable can hold
# also defines rasa "lookups" for variables
context-variables:
  - user_initiative:
    type: flag
    config: bool
  - order:
    type: enum
    config:
      - cheese
      - pepperoni
      - mushroom
      - gluten free
      - hawaiian
  - order_available:
    type: flag
    config: bool
  - location:
    type: spacy_gpe # spacy location extractor
  - payment_method:
    type: enum
    config: 
      - credit
      - debit
      - cash
  - card_number:
    type: regex
    config: \d{16}
  - goal:
    type: flag
    config: bool

# combine with the context variables above to pass to rasa
nlu:
  - intent: greet
    examples: |
      - Hey
      - Hi
      - hey there

  - intent: leave
    examples: |
      - Goodbye
      - Bye
      - That's all

  - intent: share_order
    examples: |
      - I want a [cheese](order) pizza
      - [pepperoni](order) pizza please!
      - Do you have [mushroom](order) pizza?

  - intent: share_location
    examples: |
      - I live in [New York City](location).
      - Do you deliver to [Denver](location)?
      - I want my pizza to be delivered to [Chicago](location).

  - intent: share_payment_method
    examples: |
      - I want to pay by [credit card](payment_method).
      - Can I pay with [debit](payment_method)?
      - I will pay in [cash](payment_method)

  - intent: pay
    examples: |
      - My credit card number is [0123456789012342](card_number).
      - This is my account number [3637456789573835](card_number)
      - Ok, the number on my card is [0586456789456048](card_number).

# can set up template effects
effects:
  # general validate-response effect created by default
  validate-response:
    type: one-of # can be and or one-of
    outcomes:
      - type: and # received a valid value
        - have: {entity} 
        - not:
          maybe_have: {entity}
      - forced-follow-up: {parent_action} # need to ask again, still have no idea
      - type: and
        - maybe_have: location
        - forced-follow-up: clarify # will run the clarify version of the parent action

actions:
  # ask-for actions assume:
  #   conditions:
  #   - that the agent does not have, or maybe have, the relevant context variable
  #     that it needs to extract from the user
  #   - the agent has initiative
  #   effects:
  #    - usually validate-response, or custom 
  ask-for:
    ask-location:
      name: ask-location
      category: get_info
      entities:
        - location
      # if clarify-dialogue is specified, then we create a duplicate "clarify"
      # action, which assumes as a condition that the agent may have the variable
      dialogue:
        ask-dialogue: "Where are you located?"
        clarify-dialogue: "Are you located in {location}?"
      effects:
        validate-response: location

    # ask for the user's order
    ask-order:
      name: ask-order
      category: get_info
      entities:
        - order
     dialogue:
        ask-dialogue: "What would you like to order?"
        clarify-dialogue: "Would you like to order {order}?"
      effects:
        type: and
          - validate-response: order
          - forced-follow-up: check-order-availability

    # ask for the user's payment method
    ask-payment:
      name: ask-payment-method
      category: get_info
      entities:
        - payment_method
      dialogue:
        ask-dialogue: "How would you like to pay?"
        clarify-dialogue: "Would you like to pay with {payment_method}?"
      conditions:
        have: order
        have: location
      effects:
        validate-response: payment_method

    # ask for the user's card #
    ask-card-number:
      name: ask-card-number
      category: get_info
      entities:
        - card_number
      dialogue:
        ask-dialogue: "Enter your card details."
        clarify-dialogue: "Are these your card details?"
      conditions:
        have: payment_method
        payment_method:
          or:
            credit
            debit
      effects:
        validate-response: card_number
        
  web:
  # web actions assume:
  #   conditions:
  #   - that the agent has extracted all the entities listed
  #   effects:
  #   - custom
    check-order-availability:
      name: check-order-availability
      entities:
        - order
        - order_available
      dialogue: "Checking order availability..."
      call: pizzasite.com/orders # make the call
      effects:
        type: one-of
        outcomes:
          - order_available: true # order is in stock
          - type: and:
            - order_available: false # order is not in stock
            - not:
                have: order
            - forced-follow-up: ask-order
          - error: 404 # site down

    place-order:
      name: place-order
      entities:
        - order
      dialogue: "Making the order..."
      call: pizzasite.com/orders # make the call
      conditions:
        - or:
          have: card_number
          payment_method: cash
      effects:
        type: one-of
        outcomes:
          - success: true # order was made
          - error: 404 # site down

...